"use strict";Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _eta=require("eta");const _path=require("path");const _promises=require("fs/promises");const _util=require("./util");const eta=new _eta.Eta({views:_path.join(__dirname,"views")});const main=async(yyyymmdd,data)=>{const[yyyy,mm,dd]=[yyyymmdd.slice(0,4),yyyymmdd.slice(4,6),yyyymmdd.slice(6,8)];const dt=`${yyyy}-${mm}-${dd}`;const title=`開催場所の一覧 (${yyyy}年${mm}月${dd}日)`;const props={title,date:dt,frontmatter:{page_title:title,pagination_label:title,sidebar_position:1250-(Number(mm)*100+Number(dd)),sidebar_label:dd,date:dt,keywords:["開催場所の一覧","競馬"],thumbnail:"https://example.com/image.png"}};const rendered_text=await eta.renderAsync("./kaisai_portal/template",props);const filepath=(0,_util.makeFilepath)("index",dt);try{await (0,_promises.mkdir)(_path.dirname(filepath),{recursive:true});await (0,_promises.writeFile)(filepath,rendered_text)}catch(err){console.error("An unexpected error has occurred: ",err)}const places=retrieveKaisaiPlace(data);await Promise.allSettled(places.map(place=>renderPortalForeach(yyyymmdd,place)))};const retrieveKaisaiPlace=data=>{const place_list=data.map(race_detail=>{const{race_id,metadata}=race_detail;const place_code=race_id.slice(4,6);const place=metadata.schedule.replace(/\d+回*/i,"").replace(/\d+(日目)*/i,"");return{place,place_code}});return Array.from(new Set(place_list))};const renderPortalForeach=async(yyyymmdd,kaisai)=>{const[yyyy,mm,dd]=[yyyymmdd.slice(0,4),yyyymmdd.slice(4,6),yyyymmdd.slice(6,8)];const dt=`${yyyy}-${mm}-${dd}`;const{place,place_code}=kaisai;const title=`開催レース`;const props={title:`${title} 【${place}】`,date:dt,frontmatter:{page_title:`【${place}】${title}の一覧`,pagination_label:`【${place}】${title}の一覧`,date:dt,sidebar_label:place,keywords:["レース一覧",place,"競馬"],thumbnail:"https://example.com/image.png"}};const rendered_text=await eta.renderAsync("./kaisai_portal/template",props);const filepath=(0,_util.makeFilepath)("index",dt,place_code);try{await (0,_promises.mkdir)(_path.dirname(filepath),{recursive:true});await (0,_promises.writeFile)(filepath,rendered_text)}catch(err){console.error("An unexpected error has occurred: ",err)}};const _default=main;